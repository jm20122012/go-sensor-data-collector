// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package sqlc

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type AmbientStationUnique struct {
	ID                    int64              `json:"id"`
	Timestamp             pgtype.Timestamptz `json:"timestamp"`
	Date                  *string            `json:"date"`
	Timezone              *string            `json:"timezone"`
	DateUtc               *int32             `json:"date_utc"`
	InsideTempFeelsLikeF  *float32           `json:"inside_temp_feels_like_f"`
	OutsideTempF          *float32           `json:"outside_temp_f"`
	OutsideTempFeelsLikeF *float32           `json:"outside_temp_feels_like_f"`
	OutsideHumidity       *float32           `json:"outside_humidity"`
	InsideDewPoint        *float32           `json:"inside_dew_point"`
	OutsideDewPoint       *float32           `json:"outside_dew_point"`
	RelativePressure      *float32           `json:"relative_pressure"`
	WindDirection         *float32           `json:"wind_direction"`
	WindSpeedMph          *float32           `json:"wind_speed_mph"`
	WindSpeedGustMph      *float32           `json:"wind_speed_gust_mph"`
	MaxDailyGustMph       *float32           `json:"max_daily_gust_mph"`
	EventRainInches       *float32           `json:"event_rain_inches"`
	HourlyRainInches      *float32           `json:"hourly_rain_inches"`
	DailyRainInches       *float32           `json:"daily_rain_inches"`
	WeeklyRainInches      *float32           `json:"weekly_rain_inches"`
	MonthlyRainInches     *float32           `json:"monthly_rain_inches"`
	TotalRainInches       *float32           `json:"total_rain_inches"`
	LastRain              *string            `json:"last_rain"`
	UvIndex               *float32           `json:"uv_index"`
	SolarRadiation        *float32           `json:"solar_radiation"`
	OutsideBattStatus     *int32             `json:"outside_batt_status"`
	Co2BattStatus         *int32             `json:"co2_batt_status"`
	DeviceID              *int32             `json:"device_id"`
	DeviceTypeID          *int32             `json:"device_type_id"`
}

type AqaraTempSensorsUnique struct {
	ID               int64              `json:"id"`
	Timestamp        pgtype.Timestamptz `json:"timestamp"`
	LinkQuality      *float32           `json:"link_quality"`
	BattPercentage   *float32           `json:"batt_percentage"`
	BattVoltage      *float32           `json:"batt_voltage"`
	PowerOutageCount *int32             `json:"power_outage_count"`
	DeviceID         *int32             `json:"device_id"`
	DeviceTypeID     *int32             `json:"device_type_id"`
}

type DeviceList struct {
	ID             int64   `json:"id"`
	DeviceName     string  `json:"device_name"`
	DeviceLocation *string `json:"device_location"`
	DeviceTypeID   *int32  `json:"device_type_id"`
	DeviceID       int32   `json:"device_id"`
}

type DeviceTypeID struct {
	ID           int64  `json:"id"`
	DeviceType   string `json:"device_type"`
	DeviceTypeID int32  `json:"device_type_id"`
}

type MqttConfig struct {
	ID           int64   `json:"id"`
	MqttTopic    *string `json:"mqtt_topic"`
	DeviceID     *int32  `json:"device_id"`
	DeviceTypeID *int32  `json:"device_type_id"`
}

type SharedAtmosphericReading struct {
	ID               int64              `json:"id"`
	Timestamp        pgtype.Timestamptz `json:"timestamp"`
	TempF            *float32           `json:"temp_f"`
	TempC            *float32           `json:"temp_c"`
	Humidity         *float32           `json:"humidity"`
	AbsolutePressure *float32           `json:"absolute_pressure"`
	DeviceTypeID     *int32             `json:"device_type_id"`
	DeviceID         *int32             `json:"device_id"`
}

type SonoffSmartPlug struct {
	ID           int64              `json:"id"`
	Timestamp    pgtype.Timestamptz `json:"timestamp"`
	LinkQuality  *int32             `json:"link_quality"`
	OutletState  *int32             `json:"outlet_state"`
	DeviceID     *int32             `json:"device_id"`
	DeviceTypeID *int32             `json:"device_type_id"`
}
