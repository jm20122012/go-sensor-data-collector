// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package sqlc

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type AmbientStationDatum struct {
	ID                    int64              `json:"id"`
	Time                  pgtype.Timestamptz `json:"time"`
	Date                  *string            `json:"date"`
	Timezone              *string            `json:"timezone"`
	DateUtc               *int32             `json:"date_utc"`
	InsideTempF           *float32           `json:"inside_temp_f"`
	InsideFeelsLikeTempF  *float32           `json:"inside_feels_like_temp_f"`
	OutsideTempF          *float32           `json:"outside_temp_f"`
	OutsideFeelsLikeTempF *float32           `json:"outside_feels_like_temp_f"`
	InsideHumidity        *int32             `json:"inside_humidity"`
	OutsideHumidity       *int32             `json:"outside_humidity"`
	InsideDewPoint        *float32           `json:"inside_dew_point"`
	OutsideDewPoint       *float32           `json:"outside_dew_point"`
	BaroRelative          *float32           `json:"baro_relative"`
	BaroAbsolute          *float32           `json:"baro_absolute"`
	WindDirection         *int32             `json:"wind_direction"`
	WindSpeedMph          *float32           `json:"wind_speed_mph"`
	WindSpeedGustMph      *float32           `json:"wind_speed_gust_mph"`
	MaxDailyGust          *float32           `json:"max_daily_gust"`
	HourlyRainInches      *float32           `json:"hourly_rain_inches"`
	EventRainInches       *float32           `json:"event_rain_inches"`
	DailyRainInches       *float32           `json:"daily_rain_inches"`
	WeeklyRainInches      *float32           `json:"weekly_rain_inches"`
	MonthlyRainInches     *float32           `json:"monthly_rain_inches"`
	TotalRainInches       *float32           `json:"total_rain_inches"`
	LastRain              *string            `json:"last_rain"`
	UvIndex               *float32           `json:"uv_index"`
	SolarRadiation        *float32           `json:"solar_radiation"`
	OutsideBattStatus     *int32             `json:"outside_batt_status"`
	BattCo2               *int32             `json:"batt_co2"`
	SensorID              *int64             `json:"sensor_id"`
}

type AvtechDatum struct {
	ID        int64              `json:"id"`
	Time      pgtype.Timestamptz `json:"time"`
	TempF     *float32           `json:"temp_f"`
	TempFLow  *float32           `json:"temp_f_low"`
	TempFHigh *float32           `json:"temp_f_high"`
	TempC     *float32           `json:"temp_c"`
	TempCLow  *float32           `json:"temp_c_low"`
	TempCHigh *float32           `json:"temp_c_high"`
	SensorID  *int64             `json:"sensor_id"`
}

type DeviceTypeID struct {
	ID           int64  `json:"id"`
	DeviceType   string `json:"device_type"`
	DeviceTypeID int32  `json:"device_type_id"`
}

type PiSensorDatum struct {
	ID             int64              `json:"id"`
	Time           pgtype.Timestamptz `json:"time"`
	TempF          *float32           `json:"temp_f"`
	TempC          *float32           `json:"temp_c"`
	Humidity       *float32           `json:"humidity"`
	SensorLocation *string            `json:"sensor_location"`
	SensorID       *int64             `json:"sensor_id"`
}

type Sensor struct {
	ID             int64  `json:"id"`
	SensorName     string `json:"sensor_name"`
	SensorLocation string `json:"sensor_location"`
	DeviceTypeID   *int32 `json:"device_type_id"`
}
